conf.intervals <- boot.ci(null.boot.data)
all.bcas[i] <- c(conf.intervals$bca[4:5])
}
print(all.ks)
print(all.test.stats)
print(all.bcas)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- c()
bca.lower <- c()
bca.upper <- c()
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bca[5]
}
print(all.ks)
print(all.test.stats)
print(all.bcas)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- c()
bca.lower <- c()
bca.upper <- c()
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower <- conf.intervals$bca[4]
bca.upper <- conf.intervals$bc
}
print(all.ks)
print(all.test.stats)
print(bca.upper)
print(bca.lower)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- c()
bca.lower <- c()
bca.upper <- c()
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower <- conf.intervals$bca[4]
bca.upper <- conf.intervals$bc[5]
}
print(all.ks)
print(all.test.stats)
print(bca.upper)
print(bca.lower)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- c()
bca.lower <- c()
bca.upper <- c()
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bc[5]
}
print(all.ks)
print(all.test.stats)
print(bca.upper)
print(bca.lower)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- c()
bca.lower <- c()
bca.upper <- c()
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bc[5]
}
print(all.ks)
print(all.test.stats)
print(bca.upper)
print(bca.lower)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- c()
bca.lower <- c()
bca.upper <- c()
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bc[5]
}
print(all.ks)
print(all.test.stats)
print(bca.upper)
print(bca.lower)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- rep(0, length(all.ks))
bca.lower <- rep(0, length(all.ks))
bca.upper <- rep(0, length(all.ks))
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bc[5]
}
print(all.ks)
print(all.test.stats)
print(bca.upper)
print(bca.lower)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- rep(0, length(all.ks))
bca.lower <- rep(0, length(all.ks))
bca.upper <- rep(0, length(all.ks))
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bc[5]
}
plotting.data <- data.frame(all.ks, all.test.stats[2:5], bca.lower[2:5],
bca.upper[2:5])
return(plotting.data)
# all.CIs <- sapply(all.ks, get.CI, m=m, n=n)
#return(conf.intervals$bca)
}
ang.diff.CI(5, 50, 100)
plot.CIs <- function(dataframe){
plot(all.test.stats ~ all.ks, data = dataframe)
}
df <- ang.diff.CI(5, 50, 100)
df
df <- ang.diff.CI(5, 50, 100)
df
plot.CIs(df)
str(df)
plot.CIs <- function(dataframe){
plot(all.test.stats.2.5. ~ all.ks, data = dataframe)
}
plot.CIs(df)
library(ggplot2)
library(boot)
library(ggplot2)
plot.CIs <- function(dataframe){
ggplot(dataframe, aes(dataframe$all.ks, dataframe$all.test.stats.2.5.))
}
plot.CIs(df)
plot.CIs <- function(dataframe){
ggplot(dataframe, aes(all.ks, all.test.stats.2.5.))
}
plot.CIs(df)
plot.CIs <- function(dataframe){
ggplot(dataframe, aes(all.ks, all.test.stats.2.5.)) +
geom_point() +
geom_errorbar(aes(ymin = bca.lower, ymax = bca.upper))
}
plot.CIs(df)
plot.CIs <- function(dataframe){
ggplot(dataframe, aes(all.ks, all.test.stats.2.5.)) +
geom_point() +
geom_errorbar(aes(ymin = bca.lower.2.5., ymax = bca.upper.2.5.))
}
plot.CIs(df)
most.probable.value <- function(vector){
p.dist <- hist(vector, breaks = 41, freqs = TRUE, plot = FALSE)
midPoint <- p.dist$mids[p.dist$counts == max(p.dist$counts)]
# midPoint <- p.dist$mids[abs((p.dist$density) - max(p.dist$density)) < 1e-10]
return(midPoint[1])
}
source('C:/Users/Oliver/MSC1090/assignment7/Circle.Utilities.R')
library(boot)
library(ggplot2)
most.probable.value <- function(vector){
p.dist <- hist(vector, breaks = 41, freqs = TRUE, plot = FALSE)
midPoint <- p.dist$mids[p.dist$counts == max(p.dist$counts)]
# midPoint <- p.dist$mids[abs((p.dist$density) - max(p.dist$density)) < 1e-10]
return(midPoint[1])
}
nonpara.bs <- function(vector, n){
my.mpv <- function(vector, i) return(most.probable.value(vector[i]))
boot.data <- boot(data = vector, statistic = my.mpv,
R = n)
return(boot.data)
# my.mode <- function(vector, i) return(most.probable.value(vector[i]))
}
ang.diff.CI <- function(k, m, n){
all.ks <- seq(2, k)
all.test.stats <- rep(0, length(all.ks))
bca.lower <- rep(0, length(all.ks))
bca.upper <- rep(0, length(all.ks))
for (i in all.ks) {
null.dists <- sim.null.hypo(k, m)
null.boot.data <- nonpara.bs(null.dists, n)
all.test.stats[i] <- null.boot.data$t0
conf.intervals <- boot.ci(null.boot.data)
bca.lower[i] <- conf.intervals$bca[4]
bca.upper[i] <- conf.intervals$bc[5]
}
plotting.data <- data.frame(all.ks, all.test.stats[2:5], bca.lower[2:5],
bca.upper[2:5])
return(plotting.data)
}
plot.CIs <- function(dataframe){
ggplot(dataframe, aes(all.ks, all.test.stats.2.5.)) +
geom_point() +
geom_errorbar(aes(ymin = bca.lower.2.5., ymax = bca.upper.2.5.))
}
ang.diff.CI(5, 50, 100)
df <- ang.diff.CI(5, 50, 100)
plot.CIs(df)
most.probable.value(diffs)
Data <- read.csv('C:\Users\Oliver\Desktop\IL8+HB.data.csv')
Data <- read.csv('C:\Users\Oliver\Desktop\IL8+HB.data.csv')
Data <- read.csv('C:\Users\Oliver\Desktop\IL8+HB.data.csv')
Data <- read.csv('C:\\Users\\Oliver\\Desktop\\IL8+HB.data.csv')
Data
# plotting the IL8 DATA
library(ggplot2)
Data <- read.csv('C:\\Users\\Oliver\\Desktop\\IL8+HB.data.csv')
# plotting the IL8 DATA
library(ggplot2)
Data <- read.csv('C:\\Users\\Oliver\\Desktop\\IL8+HB.data.csv')
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) +
geom_line(aes(y = HekBlue, colour = "HekBlue"))
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) +
geom_line(aes(y = HekBlue, colour = "HekBlue")) +
y_scale_reverse()
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) +
geom_line(aes(y = HekBlue, colour = "HekBlue")) +
x_scale_reverse()
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) +
geom_line(aes(y = HekBlue, colour = "HekBlue")) +
scale_x_reverse()
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) +
geom_line(aes(y = HekBlue, colour = "HekBlue")) +
scale_x_reverse() +
geom_point()
ggplot(data = Data, aes(Concentrations)) +
geom_step(aes(y = IL8, colour = "IL8")) +
geom_step(aes(y = HekBlue, colour = "HekBlue")) +
scale_x_reverse() +
ggplot(data = Data, aes(Concentrations)) +
geom_step(aes(y = IL8, colour = "IL8")) +
geom_step(aes(y = HekBlue, colour = "HekBlue")) +
scale_x_reverse()
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) +
geom_line(aes(y = HekBlue, colour = "HekBlue")) +
scale_x_reverse() +
geom_point()
ggplot(data = Data, aes(Concentrations)) +
geom_line(aes(y = IL8, colour = "IL8")) + geom_point() +
geom_line(aes(y = HekBlue, colour = "HekBlue")) + geom_point() +
scale_x_reverse()
install.packages("ggpubr")
ggpubr
library(ggpubr)
install.packages('ggpubr')
library(ggpubr)
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/ggpubr")
library(ggpubr)
Boxplot <- function(dataframe){
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = 'Treatment')) +
geom_boxplot()+
geom_signif(comparisons = list(c('D14', 'D30')),
map_signif_level = TRUE, na.rm = TRUE)
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
)
library(ggplot2)
library(ggsignif)
mouse_data <- read.csv('141122GBRepeat(IL8).csv')
setwd("C:/Users/Oliver/MSC1090/assignment9")
library(ggplot2)
library(ggsignif)
mouse_data <- read.csv('141122GBRepeat(IL8).csv')
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = 'Treatment')) +
geom_boxplot()+
geom_signif(comparisons = list(c('D14', 'D30')),
map_signif_level = TRUE, na.rm = TRUE)
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
library(ggplot2)
install.packages(c("bit", "data.table", "digest", "knitr", "sass", "vctrs", "xfun"))
library(ggplot2)
library(ggsignif)
mouse_data <- read.csv('141122GBRepeat(IL8).csv')
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = 'Treatment')) +
geom_boxplot()+
geom_signif(comparisons = list(c('D14', 'D30')),
map_signif_level = TRUE, na.rm = TRUE)
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = 'Treatment')) +
geom_boxplot()+
geom_signif(comparisons = list(c('D14', 'D30')))
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = 'Treatment')) +
geom_boxplot()+
geom_signif(comparisons = list(c('D14', 'D30'))) +
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655)) +
geom_boxplot(aes(fill = Treatment), stat = 'identity', position = 'dodge',
width = .5) +
geom_signif(comparisons = list(c('D14', 'D30'))) +
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655)) +
geom_boxplot(aes(fill = Treatment), stat = 'identity', position = 'dodge',
width = .5) +
#geom_signif(
#y_position = c()
#geom_signif(comparisons = list(c('D14', 'D30'))) +
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot() +
#geom_signif(
#y_position = c()
#geom_signif(comparisons = list(c('D14', 'D30'))) +
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot(aes(fill = Treatment), stat = "identity", position = "dodge", width = .5) +
geom_signif(
y_position = c(0.42, 0.38), xmin = x(0.8, 1.8), xmax = c(1.2, 2.2),
annotation = c('*', '*')) +
geom_signif(comparisons = list(c('D14', 'D30'))) +
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot(aes(fill = Treatment), stat = "identity", position = "dodge", width = .5) +
geom_signif(
y_position = c(0.42, 0.38), xmin = c(0.8, 1.8), xmax = c(1.2, 2.2),
annotation = c('*', '*')) +
geom_signif(comparisons = list(c('D14', 'D30'))) +
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot(aes(fill = Treatment), stat = "identity", position = "dodge", width = .5) +
geom_signif(
y_position = c(0.42, 0.38), xmin = c(0.8, 1.8), xmax = c(1.2, 2.2),
annotation = c('*', '*'), tip_length = 0) +
geom_signif(comparisons = list(c('D14', 'D30')),
y_position = 0.5, tip_length = 0, vjust = 0.2)+
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot(aes(fill = Treatment), stat = "identity", position = "dodge", width = .5) +
geom_signif(
annotations = c('*', '*'),
y_position = c(0.42, 0.38), xmin = c(0.8, 1.8), xmax = c(1.2, 2.2)) +
#geom_signif(comparisons = list(c('D14', 'D30')),
#y_position = 0.5, tip_length = 0, vjust = 0.2)+
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot() +
geom_signif(
annotations = c('*', '*'),
y_position = c(0.42, 0.38), xmin = c(0.8, 1.8), xmax = c(1.2, 2.2)) +
#geom_signif(comparisons = list(c('D14', 'D30')),
#y_position = 0.5, tip_length = 0, vjust = 0.2)+
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
Boxplot <- function(dataframe){
ggplot(data = dataframe, aes(x = Day, y = Corrected.OD655, fill = Treatment)) +
geom_boxplot() +
geom_signif(
annotations = c('*', '*'),
y_position = c(0.55, 0.5), xmin = c(0.8, 1.8), xmax = c(1.2, 2.2)) +
#geom_signif(comparisons = list(c('D14', 'D30')),
#y_position = 0.5, tip_length = 0, vjust = 0.2)+
labs(x = 'Day Post Treatment',
y = 'Response Ratio (650nm)',
title = 'Effect of SaGA Supplementation on MDP Levels of Fecal Samples',
fill = 'Treatment') +
theme_bw()
}
Boxplot(mouse_data)
